name: publish-linux
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            curl build-essential libssl-dev libgtk-3-dev libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev librsvg2-dev patchelf file jq
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
      
      - name: Install frontend deps
        run: pnpm install
      
      - name: Install Tauri CLI
        run: pnpm add -D @tauri-apps/cli
      
      - name: Build Tauri app
        run: pnpm tauri build --verbose
      
      - name: Get app version
        run: echo "APP_VERSION=$(jq -r .version src-tauri/tauri.conf.json)" >> $GITHUB_ENV
      
      - name: List bundle contents
        run: |
          echo "=== DEB Contents ==="
          ls -lah src-tauri/target/release/bundle/deb/ || true
          echo "=== Checking for examples and LICENSE ==="
          dpkg-deb -c src-tauri/target/release/bundle/deb/*_${{ env.APP_VERSION }}_amd64.deb | grep -E "examples|LICENSE" || echo "Missing examples or LICENSE in deb"
      
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            src-tauri/target/release/bundle/deb/*_${{ env.APP_VERSION }}_amd64.deb
            src-tauri/target/release/bundle/rpm/*-${{ env.APP_VERSION }}-1.x86_64.rpm
            src-tauri/target/release/bundle/appimage/*_${{ env.APP_VERSION }}_amd64.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
